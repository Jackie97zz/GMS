% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GMS_Loading.R
\name{GMS_Loading}
\alias{GMS_Loading}
\title{Loading function of Generative Multiple-purpose Sampler}
\usage{
GMS_Loading(
  save_filePy = NULL,
  save_fileR = NULL,
  option = NULL,
  gpu_ind,
  num_it,
  B1 = 3000,
  B2 = 100,
  B10 = NULL,
  eta = NULL,
  lam = 1
)
}
\arguments{
\item{save_filePy}{the saved .pt/ckpt file directory from GB-NPMLE function.}

\item{save_fileR}{the saved .RData file directory from GB-NPMLE function.}

\item{option}{option = "Train": load a pre-trained generator and further train;
option = "Sample": load a pre-trained generator and generate bootstrap samples;
option = "Generator": the saved generator.}

\item{gpu_ind}{gpu index.}

\item{num_it}{number of iterations for training.}

\item{B1}{the number of bootstrap samples in the first level.}

\item{B2}{the number of bootstrap samples in the second level.}

\item{B10}{the number of the first level bootstrap samples to be
evaluated at each iteration. This is to reduce the amount of RAM and
GPU memory in storing the bootstrap samples.}

\item{eta}{auxiliary parameter: a scalar.}

\item{lam}{tuning parameter: a scalar.}
}
\description{
Loading a pre-trained generator for further training or generation
}
\examples{
#Pre-training stage
library(reticulate)
set.seed(82941)
n = 500;p = 30;S = 100
bt0 = seq(-3, 3,length.out = p)
B1 = 5000;B2 = 1000;B10 = 100;alpha0 = 0.95;n_b2 = n/S
X = matrix(rnorm(n*p),n,p)
for(j in 1:p){X[,j] = (X[,j] + rnorm(n))/2}
mu = X\%*\%bt0
prob = 1/(1+exp(-1*mu))
y = matrix(rbinom(n,1,prob), n, 1)
fit_GMS = GMS(X, y, model="logistic", type="DoubleBoot", num_it=250,
lr_power=0.2, L=4, S=100, lr0=0.0001, sgd="Adam", hidden_size=1000,
NN_type="WM-MLP", save_on=1, save_path="")


#Option: Train the saved model
fit_load = GMS_Loading(save_filePy, save_fileR, option="Train", gpu_ind=0,
num_it=100, B1=3000, B2=100, eta=NULL)
#Option: Generator for theta_hat
theta_hat1 = GMS_Loading(save_filePy, save_fileR, option="Generator",
lam=1, gpu_ind=0,
num_it=100, B1=3000, B2=100, eta=NULL)

#Option: Generation for bootstrap samples
sample_load = GMS_Loading(save_filePy, save_fileR, option="Sample", gpu_ind=0,
num_it=100, B1=3000, B2=100, B10=100, eta=NULL)
res = post_process(sample_load, alpha=0.95, theta_hat=theta_hat1)
}
\seealso{
\code{\link{GMS_Sampling}}, \code{\link{GMS}}, \code{\link{post_process}}
}
\author{
Minsuk Shin, Jun Liu and Shijie Wang
}
